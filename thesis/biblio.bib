@article{XiGRDT,
 author = {Xi, Hongwei and Chen, Chiyan and Chen, Gang},
 title = {Guarded Recursive Datatype Constructors},
 journal = {SIGPLAN Not.},
 issue_date = {January 2003},
 volume = {38},
 number = {1},
 month = jan,
 year = {2003},
 issn = {0362-1340},
 pages = {224--235},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/640128.604150},
 doi = {10.1145/640128.604150},
 acmid = {604150},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {guarded recursive datatype constructors},
} 

@article{pDOT,
 author = {Rapoport, Marianna and Lhot\'{a}k, Ond\v{r}ej},
 title = {A Path to DOT: Formalizing Fully Path-dependent Types},
 journal = {Proc. ACM Program. Lang.},
 issue_date = {October 2019},
 volume = {3},
 number = {OOPSLA},
 month = oct,
 year = {2019},
 issn = {2475-1421},
 pages = {145:1--145:29},
 articleno = {145},
 numpages = {29},
 url = {http://doi.acm.org/10.1145/3360571},
 doi = {10.1145/3360571},
 acmid = {3360571},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {DOT, Scala, dependent types, paths},
} 

@article{OcamlMasses,
author = {Mandelbaum, Yitzhak and Stump, Aaron},
year = {2009},
month = {01},
pages = {},
title = {GADTs for the OCaml Masses}
}

@article{Stump2009DirectlyRM,
  title={Directly reflective meta-programming},
  author={Aaron Stump},
  journal={Higher-Order and Symbolic Computation},
  year={2009},
  volume={22},
  pages={115-144}
}

@article{Boehm,
  title={Automatic Synthesis of Typed Lambda-Programs on Term Algebras},
  author={Corrado B{\"o}hm and Alessandro Berarducci},
  journal={Theor. Comput. Sci.},
  year={1985},
  volume={39},
  pages={135-154}
}

@inproceedings{EssenceDOT,
  title={The Essence of Dependent Object Types},
  author={Nada Amin and Samuel Gr{\"u}tter and Martin Odersky and Tiark Rompf and Sandro Stucki},
  booktitle={A List of Successes That Can Change the World},
  year={2016}
}

@inproceedings{Towards,
 author = {Parreaux, Lionel and Boruch-Gruszecki, Aleksander and Giarrusso, Paolo G.},
 title = {Towards Improved GADT Reasoning in Scala},
 booktitle = {Proceedings of the Tenth ACM SIGPLAN Symposium on Scala},
 series = {Scala '19},
 year = {2019},
 isbn = {978-1-4503-6824-7},
 location = {London, United Kingdom},
 pages = {12--16},
 numpages = {5},
 url = {http://doi.acm.org/10.1145/3337932.3338813},
 doi = {10.1145/3337932.3338813},
 acmid = {3338813},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {DOT, Scala, generalized algebraic data types},
} 

@inproceedings{Stitch,
  title={Stitch : The Sound Type-Indexed Type Checker ( Author ’ s Cut )},
  author={},
  year={2018}
}

@article{SystemT,
author = {Alves, Sandra and Fernández, Maribel and Florido, Mário and Mackie, Ian},
year = {2010},
month = {03},
pages = {1484-1500},
title = {Gödel’s System T Revisited},
volume = {411},
journal = {Theoretical Computer Science},
doi = {10.1016/j.tcs.2009.11.014}
}

@inproceedings{DecisionTrees,
  author = {Maranget, Luc},
  title = {Compiling Pattern Matching to Good Decision Trees},
  booktitle = {Proceedings of the 2008 ACM SIGPLAN Workshop on ML},
  series = {ML '08},
  year = {2008},
  isbn = {978-1-60558-062-3},
  location = {Victoria, BC, Canada},
  pages = {35--46},
  numpages = {12},
  url = {http://doi.acm.org/10.1145/1411304.1411311},
  doi = {10.1145/1411304.1411311},
  acmid = {1411311},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {decision trees, heuristics, match compilers},
} 

@article{Kennedy:2005:GAD:1103845.1094814,
  author = {Kennedy, Andrew and Russo, Claudio V.},
  title = {Generalized Algebraic Data Types and Object-oriented Programming},
  journal = {SIGPLAN Not.},
  issue_date = {October 2005},
  volume = {40},
  number = {10},
  month = oct,
  year = {2005},
  issn = {0362-1340},
  pages = {21--40},
  numpages = {20},
  url = {http://doi.acm.org/10.1145/1103845.1094814},
  doi = {10.1145/1103845.1094814},
  acmid = {1094814},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {constraints, generalized algebraic data types, generics},
} 

@article{NominalStructural,
  title={An Overview of Nominal-Typing versus Structural-Typing in Object-Oriented Programming},
  author={Moez A. AbdelGawad},
  journal={ArXiv},
  year={2013},
  volume={abs/1309.2348}
}

@InProceedings{GADTsubtyping,
  author="Scherer, Gabriel
  and R{\'e}my, Didier",
  editor="Felleisen, Matthias
  and Gardner, Philippa",
  title="GADTs Meet Subtyping",
  booktitle="Programming Languages and Systems",
  year="2013",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="554--573",
  abstract="While generalized algebraic datatypes (GADTs) are now considered well-understood, adding them to a language with a notion of subtyping comes with a few surprises. What does it mean for a GADT parameter to be covariant? The answer turns out to be quite subtle. It involves fine-grained properties of the subtyping relation that raise interesting design questions. We allow variance annotations in GADT definitions, study their soundness, and present a sound and complete algorithm to check them. Our work may be applied to real-world ML-like languages with explicit subtyping such as OCaml, or to languages with general subtyping constraints.",
  isbn="978-3-642-37036-6"
}

@inproceedings{Giarrusso:2013:OGD:2489837.2489842,
  author = {Giarrusso, Paolo G.},
  title = {Open GADTs and Declaration-site Variance: A Problem Statement},
  booktitle = {Proceedings of the 4th Workshop on Scala},
  series = {SCALA '13},
  year = {2013},
  isbn = {978-1-4503-2064-1},
  location = {Montpellier, France},
  pages = {5:1--5:4},
  articleno = {5},
  numpages = {4},
  url = {http://doi.acm.org/10.1145/2489837.2489842},
  doi = {10.1145/2489837.2489842},
  acmid = {2489842},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {DSL embedding, Scala, lambda-calculus, lightweight modular staging, soundness, type-safety},
} 

@article{myreport:277075,
  title = {Formal foundations for GADTs in Scala},
  author = {Waśko, Radosław},
  year = {2020},
  abstract = {GADTs are a very useful language feature that allow  encoding some invariants in types. GADT reasoning is  currently implemented in Scala and Dotty, but it’s  plagued with soundness issues. To get a better  understanding of GADTs in Scala, we explore how they can be  encoded in pDOT, a calculus that is the formal foundation  of the Scala programming language, and show a sketch of  encoding a calculus containing GADTs to pDOT.},
  url = {http://infoscience.epfl.ch/record/277075},
}
